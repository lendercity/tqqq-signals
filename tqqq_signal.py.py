# -*- coding: utf-8 -*-
"""TQQQ

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WGax47SMf7vMI1kUgAD9MdBJ9kLMBEbK
"""

# ================================
# 1. SETUP
# ================================
!pip install yfinance scikit-learn joblib gspread oauth2client

import yfinance as yf
import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
import joblib
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# Paths for saving model
MODEL_PATH = "/content/drive/MyDrive/tqqq_model.pkl"
SCALER_PATH = "/content/drive/MyDrive/tqqq_scaler.pkl"

# ================================
# 2. GET DATA
# ================================
ticker = 'TQQQ'
data = yf.download(ticker, period='5y', interval='1d')
data['Return'] = data['Close'].pct_change()
data.dropna(inplace=True)

# ================================
# 3. FEATURE ENGINEERING
# ================================
data['SMA10'] = data['Close'].rolling(10).mean()
data['SMA20'] = data['Close'].rolling(20).mean()
data['EMA10'] = data['Close'].ewm(span=10).mean()
data['EMA20'] = data['Close'].ewm(span=20).mean()
data['Momentum'] = data['Close'] - data['Close'].shift(5)
data['Volatility'] = data['Close'].rolling(10).std()
data['EMA12'] = data['Close'].ewm(span=12).mean()
data['EMA26'] = data['Close'].ewm(span=26).mean()
data['MACD'] = data['EMA12'] - data['EMA26']
data['Signal_line'] = data['MACD'].ewm(span=9).mean()
data['BB_Mid'] = data['Close'].rolling(20).mean()
data['BB_Upper'] = data['BB_Mid'] + 2*data['Close'].rolling(20).std()
data['BB_Lower'] = data['BB_Mid'] - 2*data['Close'].rolling(20).std()

delta = data['Close'].diff()
gain = np.where(delta > 0, delta, 0)
loss = np.where(delta < 0, -delta, 0)
avg_gain = pd.Series(gain).rolling(14).mean()
avg_loss = pd.Series(loss).rolling(14).mean()
rs = avg_gain / avg_loss
data['RSI'] = 100 - (100/(1+rs))

data.dropna(inplace=True)
data['Target'] = np.where(data['Return'].shift(-1) > 0, 1, 0)

features = ['SMA10','SMA20','EMA10','EMA20','Momentum','Volatility',
            'MACD','Signal_line','BB_Upper','BB_Lower','RSI']
X = data[features]
y = data['Target']

# ================================
# 4. SCALE FEATURES
# ================================
try:
    scaler = joblib.load(SCALER_PATH)
except:
    scaler = StandardScaler()
    scaler.fit(X)
    joblib.dump(scaler, SCALER_PATH)

X_scaled = scaler.transform(X)

# ================================
# 5. LOAD OR TRAIN MODEL
# ================================
try:
    model = joblib.load(MODEL_PATH)
except:
    model = RandomForestClassifier(n_estimators=300, max_depth=5, random_state=42)
    model.fit(X_scaled, y)
    joblib.dump(model, MODEL_PATH)

# ================================
# 6. GENERATE TODAY'S SIGNAL
# ================================
today_features = X.iloc[-1].values.reshape(1, -1)
today_scaled = scaler.transform(today_features)
signal = model.predict(today_scaled)[0]
prob = model.predict_proba(today_scaled)[0][1]

position_size = min(1.0, max(0.1, prob))
if signal == 1:
    signal_text = f"TQQQ Signal: BUY | Confidence: {prob:.2f} | Position Size: {position_size*100:.0f}%"
else:
    signal_text = f"TQQQ Signal: SELL | Confidence: {1-prob:.2f}"

print(signal_text)

# ================================
# 7. PUSH TO GOOGLE SHEETS
# ================================
# (1) Create a Service Account in Google Cloud
# (2) Enable Sheets API, download JSON credentials
# (3) Upload credentials.json to Colab or Drive

scope = ["https://spreadsheets.google.com/feeds","https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("/content/drive/MyDrive/credentials.json", scope)
client = gspread.authorize(creds)

# Open your sheet (replace with your sheet name)
sheet = client.open("TQQQ Signals").sheet1
sheet.append_row([str(data.index[-1].date()), float(data['Close'].iloc[-1]), signal_text])